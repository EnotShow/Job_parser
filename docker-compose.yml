version: "3.11"
services:
  db:
    image: postgres:latest
    volumes:
      - pg_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    container_name: backend
    restart: always
    build:
      context: ././
      dockerfile: Dockerfile
    expose:
      - 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: "sh -c 'alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug'"

  nginx:
    image: nginx:1.19.8-alpine
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/config/nginx/conf.d:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pg_data:
